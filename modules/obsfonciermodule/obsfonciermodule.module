<?php

/**
 * @file
 * Contains obsfonciermodule.module.
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Form\FormStateInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;
use Drupal\Core\Url;

/**
 * Implements hook_help().
 */
function obsfonciermodule_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the obsfonciermodule module.
    case 'help.page.obsfonciermodule':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Module pour Observatoire du Foncier') . '</p>';
      return $output;

    default:
  }
}

/**
 * un user doit arrive sur la liste des projets quand il se connecte, sauf la première fois
 * hook_user_login($account) */
function obsfonciermodule_user_login($account){

	if (in_array('ministere', \Drupal::currentUser()->getRoles())) {
        $url_object = \Drupal::service('path.validator')->getUrlIfValid('/liste-des-projets');
	    $url_object->setAbsolute();
	    $url = $url_object->toString();
	    $response = new RedirectResponse($url);
	    $response->send();
	}
}

function getOptions($table) {

	$options = array();
    $nids = \Drupal::entityQuery($table)
    		->execute();
    $datas = \Drupal::entityTypeManager()->getStorage($table)->loadMultiple($nids);
    foreach ($datas as $nid => $data) {
    	$options[$nid] = $data->get('name')->getValue()['0']['value'];
    }
    asort($options);
    return $options;
}  

function obsfonciermodule_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

	
	
	if (in_array($form_id, array('entreprise_type1_edit_form', 'entreprise_type1_add_form'))) {
		//Supprime le bouton de suppression dans les form
		unset($form['actions']['delete']);
		
		//On appelle la fonction qui fera la redirection
		$form['actions']['submit']['#submit'][] = 'obsfonciermodule_liste_entreprise';
		
		if ($form_id == 'entreprise_type1_edit_form') $_SESSION['mail']['type'] = 'projet_add';
		if ($form_id == 'entreprise_type1_add_form') $_SESSION['mail']['type'] = 'projet_maj';
		
		
		}
	
	if (in_array($form_id, array('permisminier_type1_add_form', 'permisminier_type1_edit_form', 
		'permisautorisation_type1_add_form', 'permisautorisation_type1_edit_form',
		'contrat_type1_add_form', 'contrat_type1_edit_form'))) {
		
		//Supprime le bouton de suppression dans les form
		unset($form['actions']['delete']);
		
		if ($form_id == 'permisminier_type1_add_form') $_SESSION['mail']['type'] = 'permisminier_add';
		if ($form_id == 'permisminier_type1_edit_form') $_SESSION['mail']['type'] = 'permisminier_maj';
		if ($form_id == 'permisautorisation_type1_add_form') $_SESSION['mail']['type'] = 'permisautorisation_add';
		if ($form_id == 'permisautorisation_type1_edit_form') $_SESSION['mail']['type'] = 'permisautorisation_maj';
		if ($form_id == 'contrat_type1_add_form') $_SESSION['mail']['type'] = 'contrat_add';
		if ($form_id == 'contrat_type1_edit_form') $_SESSION['mail']['type'] = 'contrat_maj';
		
		//On appelle la fonction qui fera la redirection
		$form['actions']['submit']['#submit'][] = 'obsfonciermodule_edit_entreprise';
		  
		}
}  

function obsfonciermodule_liste_entreprise(array &$form, FormStateInterface $form_state) {
	//On redirige vers la liste des entreprises
	$values = $form_state->getValues();
	
	send_mail($_SESSION['mail']['type'], $values['id']);
	unset($_SESSION['mail']['type']);
	$form_state->setRedirect('obsfonciermodule.liste_entreprise');
}


function obsfonciermodule_edit_entreprise(array &$form, FormStateInterface $form_state) {
	//On redirige vers l'entreprise/projet en édition
	$values = $form_state->getValues();
	
	$option = array('entreprise' => $values['entreprise_id']);
	$type = "contrat_maj";
	
	if ($type == 'permisminier') $idObject = $values['num_permis'];
	if ($type == 'permisautorisation') $idObject = $values['name'];
	if ($type == 'contrat') $idObject = $values['name'];

	
	send_mail($_SESSION['mail']['type'], $values['entreprise_id'], $idObject);
	unset($_SESSION['mail']['type']);
	$form_state->setRedirect('obsfonciermodule.edit_entreprise', $option);
}

function send_mail($type, $entreprise_id, $idObject='') {
	//A chaque update ou create, on va envoyer un email au responsable de l'obs du foncier
	
	$entreprise = \Drupal::entityTypeManager()->getStorage('entreprise')->load($entreprise_id);
    
    $nom_entreprise = $entreprise->get('name')->getValue()['0']['value'];
    $cd_projet = $entreprise->get('cd_projet')->getValue()['0']['value'];
    
    
	
	 $mailManager = \Drupal::service('plugin.manager.mail');
	 $module = 'obsfonciermodule';
	 switch($type) {
	 	case 'contrat_add':
        	$msg = "Le contrat ".$idObject." a été créé";
        	break;
    	case 'contrat_maj':
        	$msg = "Le contrat ".$idObject." a été mis à jour";
        	break;
       	case 'permisminier_add':
        	$msg = "Le permis minier ".$idObject." a été créé";
        	break;
    	case 'permisminier_maj':
        	$msg = "Le permis minier ".$idObject."  a été mis à jour";
        	break;
        case 'permisautorisation_add':
        	$msg = "L'autorisation ".$idObject."  a été créé";
        	break;
    	case 'permisautorisation_maj':
        	$msg = "L'autorisation ".$idObject."  a été mise à jour";
        	break;
        case 'projet_add':
        	$msg = "Le projet ".$nom_entreprise." (".$cd_projet.") a été créé";
        	break;
    	case 'projet_maj':
        	$msg = "Le projet ".$nom_entreprise." (".$cd_projet.") a été mis à jour";
        	break;
       }
	 
	 $key = $type; // Replace with Your key
	 $to = "ingenosya.guillaume@gmail.com";
	 $from = 'OBSERVATOIRE DU FONCIER';
	 $subject = "OBSERVATOIRE DU FONCIER - Projet ".$nom_entreprise." (".$cd_projet.")";
	 $langcode = \Drupal::currentUser()->getPreferredLangcode();
	 $send = true;
	
	 //$result = $mailManager->mail($module, $key, $to, $langcode, $params, NULL, $send);
	 
	 //Utilisateur connecté
	 $idUser = \Drupal::currentUser()->id();
	 $user = \Drupal\user\Entity\User::load($idUser);
	 //$user->getUsername();
	 $userConnected = $user->getDisplayName();
	 $emailConnected = $user->getEmail();
	 $msgUser = "Utilisateur responsable de la modification : ".$userConnected." (".$emailConnected.")";
	 $msgFin = "Vous pouvez consulter les informations en vous connectant sur le site internet.";
	 $msgFin .= "<br>Cet email est généré automatiquement, merci de ne pas y répondre.";
	  	
	  	
	 //Mail défini dans la config de drupal
	 $site_config = \Drupal::config('system.site');
	 $site_mail = $site_config->get('mail');
	 if (empty($site_mail)) {
	    $site_mail = ini_get('sendmail_from');
	 }
	
	 $headers = array(
	    'MIME-Version' => '1.0',
	    'Content-Type' => 'text/html; charset=UTF-8; format=flowed; delsp=yes',
	    'Content-Transfer-Encoding' => '8Bit',
	    'X-Mailer' => 'Drupal',
	 );
	 // To prevent email from looking like spam, the addresses in the Sender and
	 // Return-Path headers should have a domain authorized to use the
	 // originating SMTP server.
	 $headers['Sender'] = $headers['Return-Path'] = $site_mail;
	 $headers['From'] = $site_config->get('name') . ' <' . $site_mail . '>';
	 $reply = $site_mail;
	 if ($reply) {
	    $headers['Reply-to'] = $reply;
	 }
	 $message['headers'] = $headers;
	  
	 /*$message = [
        'id' => 'drupal_mail_obsfoncier' ,
        //'headers' => ['Content-type' => 'text/html; charset=UTF-8; format=flowed; delsp=yes'],
        'headers' => $headers,
        'subject' => $subject,
        'from' => $from,
        'to' => $to,
        'body' => "Bonjour<br><br>".$msg."<br><br>".$msgUser."<br><br>".$msgFin ,
      ];*/
      
      $message = array(
	    'id' => 'obsfonciermodule_sendmail',
	    'module' => $module,
	    'key' => $key,
	    'headers' => $headers,
	    'to' => $to,
	    'from' => $site_mail,
	    'reply-to' => $reply,
	    'send' => TRUE,
	    'subject' =>  $subject,
	    'body' => "Bonjour<br><br>".$msg."<br><br>".$msgUser."<br><br>".$msgFin ,
	  );
      
	  
      $result = $mailManager->getInstance(['module' => $module, 'key' => $key])->mail($message);
	
	 
	 if ($result != true) {
	    $message = t("Il y a eu un problème en envoyant l'email à @email.", array('@email' => $to));
	    drupal_set_message($message, 'error');
	    \Drupal::logger('mail-log')->error($message);
	    return;
	 }
	
	 $message = t('Un email a été envoyé à @email ', array('@email' => $to));
	 drupal_set_message($message);
	
}
	
	